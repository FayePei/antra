What’s package.json and package-lock.json?
package.json is a file used in Node.js projects to manage the project's metadata and dependencies. 
It includes important information such as the project's name, version, author, license, and a list of dependencies (libraries and packages) 
required for the project to run. It also allows for the specification of scripts that can automate tasks, 
such as running tests or starting a development server.

package-lock.json is a file automatically generated by npm (Node Package Manager) whenever the npm install command is run. 
It records the exact versions of the dependencies (and their dependencies) installed in the node_modules directory. 
This ensures that the project builds consistently across different environments and that all contributors and CI systems
use the exact same versions of dependencies, providing a stable and reproducible development environment.

What’s the difference between npm and npx?
npm (Node Package Manager)
Purpose: npm is primarily a package manager for JavaScript. It is used to install, update, and manage dependencies (packages or modules) for Node.js projects.
Usage: With npm, you install packages either globally (npm install -g package-name) or locally (npm install package-name) to your project. The installed packages are added to your node_modules directory (if local) and listed in your package.json file under dependencies.
Global vs. Local Installation: Globally installed packages are available system-wide, while locally installed packages are available only within the project where they are installed.

npx (Node Package Runner)
Purpose: npx is a tool to execute packages that would normally be installed globally without actually installing them. It simplifies the use of command-line tools that come with npm packages.
Usage: You can use npx to run binaries (executable commands) from npm packages without needing to install them globally. For example, running npx package-name will download the package if it's not installed and then execute it, all in one command.
Advantages: npx helps avoid "global pollution" by not requiring packages to be installed globally just to use their CLI tools. This is particularly useful for one-off commands or for using specific versions of tools without affecting the global environment.

What is babel?
Babel is a widely used JavaScript compiler and toolchain that allows developers to write code using the latest JavaScript features and standards, which might not be supported by all environments (such as older browsers or older versions of Node.js). Babel transforms this modern JavaScript code into a version that is compatible with older JavaScript environments.


What is webpack?
Webpack is a popular open-source module bundler for JavaScript applications. 
It takes various modules with dependencies and combines them into one or more bundles, typically for use in a web browser. 
Webpack handles not only JavaScript but also other types of assets, such as CSS, images, and fonts, making it a versatile tool for managing and optimizing the assets of a web application.
